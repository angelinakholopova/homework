#!/usr/bin/env python
# coding: utf-8

# **Задача 1
# Даны два неупорядоченных набора целых чисел (может быть, с повторениями). Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во элементов второго множества. Затем пользователь вводит сами элементы множеств.**

# In[9]:


n = int(input('Введите количество элементов 1-ой последовательности '))
m = int(input('Введите количество элементов 2-ой последовательности '))
list_1 = []
list_2 = []
for i in range(n):
    el = int(input('Введите элемент 1-ой последовательности: '))
    list_1.append(el)
for j in range(m):
    el = int(input('Введите элемент 2-ой последовательности: '))
    list_2.append(el)
set_1, set_2 = set(list_1), set(list_2)
inter = list(set_1&set_2)
print(inter.sort())


# **Задача 2
# В фермерском хозяйстве в Карелии выращивают чернику. Она растет на круглой грядке, причем кусты высажены только по окружности. Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растет N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод – на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из управляющего модуля и нескольких собирающих модулей. Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль, находясь перед некоторым кустом заданной во входном файле грядки.**

# In[1]:


n = int(input('Введите количество кустов: '))
bushes = []
for i in range(n):
    berries = int(input('Введите количество ягод: '))
    bushes.append(berries)
#max_berry = bushes[0] + bushes[1] + bushes[n-1]
for j in range(n):
    if j == 0:
        max_berry = bushes[0] + bushes[1] + bushes[n-1] 
    elif (j != 0) and (j != n-1):
        berry =  bushes[j] + bushes[j-1] + bushes[j+1] 
        if berry > max_berry:
            max_berry = berry
    else:
        berry = bushes[0] + bushes[n-1] + bushes[n-2]
        if berry > max_berry:
            max_berry = berry
print(max_berry)
        


# In[ ]:





# In[ ]:




